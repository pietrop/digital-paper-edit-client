{"version":3,"sources":["../node_modules/path-browserify/index.js","Components/Transcripts/TranscriptCorrect.js"],"names":["normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","filter","xs","f","res","push","exports","resolve","resolvedPath","resolvedAbsolute","arguments","path","process","cwd","TypeError","charAt","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","slice","call","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","code","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","str","len","TranscriptEditor","React","lazy","TranscriptCorrect","props","componentDidMount","ApiWrapper","getTranscript","state","projectId","transcriptId","then","json","console","log","setState","projectTitle","transcriptTitle","transcriptJson","transcript","url","clipName","handleSave","autoSaveData","data","title","updateTranscript","response","ok","savedNotification","className","Date","toLocaleString","catch","e","error","dismissable","variant","heading","message","redirectToAnnotatePage","redirect","renderRedirect","newTranscriptId","match","params","transcriptEditorRef","createRef","mediaType","this","style","backgroundColor","fluid","sm","md","ld","xl","marginBottom","items","name","link","fallback","lg","width","height","transcriptData","mediaUrl","isEditable","autoSaveContentType","handleSaveEditor","Component"],"mappings":"qJAAA,YA4BA,SAASA,EAAeC,EAAOC,GAG7B,IADA,IAAIC,EAAK,EACAC,EAAIH,EAAMI,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC1C,IAAIE,EAAOL,EAAMG,GACJ,MAATE,EACFL,EAAMM,OAAOH,EAAG,GACE,OAATE,GACTL,EAAMM,OAAOH,EAAG,GAChBD,KACSA,IACTF,EAAMM,OAAOH,EAAG,GAChBD,KAKJ,GAAID,EACF,KAAOC,IAAMA,EACXF,EAAMO,QAAQ,MAIlB,OAAOP,EA0OT,SAASQ,EAAQC,EAAIC,GACjB,GAAID,EAAGD,OAAQ,OAAOC,EAAGD,OAAOE,GAEhC,IADA,IAAIC,EAAM,GACDR,EAAI,EAAGA,EAAIM,EAAGL,OAAQD,IACvBO,EAAED,EAAGN,GAAIA,EAAGM,IAAKE,EAAIC,KAAKH,EAAGN,IAErC,OAAOQ,EA3OXE,EAAQC,QAAU,WAIhB,IAHA,IAAIC,EAAe,GACfC,GAAmB,EAEdb,EAAIc,UAAUb,OAAS,EAAGD,IAAM,IAAMa,EAAkBb,IAAK,CACpE,IAAIe,EAAQf,GAAK,EAAKc,UAAUd,GAAKgB,EAAQC,MAG7C,GAAoB,kBAATF,EACT,MAAM,IAAIG,UAAU,6CACVH,IAIZH,EAAeG,EAAO,IAAMH,EAC5BC,EAAsC,MAAnBE,EAAKI,OAAO,IAWjC,OAASN,EAAmB,IAAM,KAJlCD,EAAehB,EAAeS,EAAOO,EAAaQ,MAAM,MAAM,SAASC,GACrE,QAASA,MACNR,GAAkBS,KAAK,OAE6B,KAK3DZ,EAAQa,UAAY,SAASR,GAC3B,IAAIS,EAAad,EAAQc,WAAWT,GAChCU,EAAqC,MAArBC,EAAOX,GAAO,GAclC,OAXAA,EAAOnB,EAAeS,EAAOU,EAAKK,MAAM,MAAM,SAASC,GACrD,QAASA,MACNG,GAAYF,KAAK,OAERE,IACZT,EAAO,KAELA,GAAQU,IACVV,GAAQ,MAGFS,EAAa,IAAM,IAAMT,GAInCL,EAAQc,WAAa,SAAST,GAC5B,MAA0B,MAAnBA,EAAKI,OAAO,IAIrBT,EAAQY,KAAO,WACb,IAAIK,EAAQC,MAAMC,UAAUC,MAAMC,KAAKjB,UAAW,GAClD,OAAOJ,EAAQa,UAAUlB,EAAOsB,GAAO,SAASN,EAAGW,GACjD,GAAiB,kBAANX,EACT,MAAM,IAAIH,UAAU,0CAEtB,OAAOG,KACNC,KAAK,OAMVZ,EAAQuB,SAAW,SAASC,EAAMC,GAIhC,SAASC,EAAKC,GAEZ,IADA,IAAIC,EAAQ,EACLA,EAAQD,EAAIpC,QACE,KAAfoC,EAAIC,GADiBA,KAK3B,IADA,IAAIC,EAAMF,EAAIpC,OAAS,EAChBsC,GAAO,GACK,KAAbF,EAAIE,GADOA,KAIjB,OAAID,EAAQC,EAAY,GACjBF,EAAIP,MAAMQ,EAAOC,EAAMD,EAAQ,GAfxCJ,EAAOxB,EAAQC,QAAQuB,GAAMR,OAAO,GACpCS,EAAKzB,EAAQC,QAAQwB,GAAIT,OAAO,GAsBhC,IALA,IAAIc,EAAYJ,EAAKF,EAAKd,MAAM,MAC5BqB,EAAUL,EAAKD,EAAGf,MAAM,MAExBnB,EAASyC,KAAKC,IAAIH,EAAUvC,OAAQwC,EAAQxC,QAC5C2C,EAAkB3C,EACbD,EAAI,EAAGA,EAAIC,EAAQD,IAC1B,GAAIwC,EAAUxC,KAAOyC,EAAQzC,GAAI,CAC/B4C,EAAkB5C,EAClB,MAIJ,IAAI6C,EAAc,GAClB,IAAS7C,EAAI4C,EAAiB5C,EAAIwC,EAAUvC,OAAQD,IAClD6C,EAAYpC,KAAK,MAKnB,OAFAoC,EAAcA,EAAYC,OAAOL,EAAQX,MAAMc,KAE5BtB,KAAK,MAG1BZ,EAAQqC,IAAM,IACdrC,EAAQsC,UAAY,IAEpBtC,EAAQuC,QAAU,SAAUlC,GAE1B,GADoB,kBAATA,IAAmBA,GAAc,IACxB,IAAhBA,EAAKd,OAAc,MAAO,IAK9B,IAJA,IAAIiD,EAAOnC,EAAKoC,WAAW,GACvBC,EAAmB,KAATF,EACVX,GAAO,EACPc,GAAe,EACVrD,EAAIe,EAAKd,OAAS,EAAGD,GAAK,IAAKA,EAEtC,GAAa,MADbkD,EAAOnC,EAAKoC,WAAWnD,KAEnB,IAAKqD,EAAc,CACjBd,EAAMvC,EACN,YAIJqD,GAAe,EAInB,OAAa,IAATd,EAAmBa,EAAU,IAAM,IACnCA,GAAmB,IAARb,EAGN,IAEFxB,EAAKe,MAAM,EAAGS,IAiCvB7B,EAAQ4C,SAAW,SAAUvC,EAAMwC,GACjC,IAAIhD,EA/BN,SAAkBQ,GACI,kBAATA,IAAmBA,GAAc,IAE5C,IAGIf,EAHAsC,EAAQ,EACRC,GAAO,EACPc,GAAe,EAGnB,IAAKrD,EAAIe,EAAKd,OAAS,EAAGD,GAAK,IAAKA,EAClC,GAA2B,KAAvBe,EAAKoC,WAAWnD,IAGhB,IAAKqD,EAAc,CACjBf,EAAQtC,EAAI,EACZ,YAEgB,IAATuC,IAGXc,GAAe,EACfd,EAAMvC,EAAI,GAId,OAAa,IAATuC,EAAmB,GAChBxB,EAAKe,MAAMQ,EAAOC,GAMjBe,CAASvC,GAIjB,OAHIwC,GAAOhD,EAAEmB,QAAQ,EAAI6B,EAAItD,UAAYsD,IACvChD,EAAIA,EAAEmB,OAAO,EAAGnB,EAAEN,OAASsD,EAAItD,SAE1BM,GAGTG,EAAQ8C,QAAU,SAAUzC,GACN,kBAATA,IAAmBA,GAAc,IAQ5C,IAPA,IAAI0C,GAAY,EACZC,EAAY,EACZnB,GAAO,EACPc,GAAe,EAGfM,EAAc,EACT3D,EAAIe,EAAKd,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACzC,IAAIkD,EAAOnC,EAAKoC,WAAWnD,GAC3B,GAAa,KAATkD,GASS,IAATX,IAGFc,GAAe,EACfd,EAAMvC,EAAI,GAEC,KAATkD,GAEkB,IAAdO,EACFA,EAAWzD,EACY,IAAhB2D,IACPA,EAAc,IACK,IAAdF,IAGTE,GAAe,QArBb,IAAKN,EAAc,CACjBK,EAAY1D,EAAI,EAChB,OAuBR,OAAkB,IAAdyD,IAA4B,IAATlB,GAEH,IAAhBoB,GAEgB,IAAhBA,GAAqBF,IAAalB,EAAM,GAAKkB,IAAaC,EAAY,EACjE,GAEF3C,EAAKe,MAAM2B,EAAUlB,IAa9B,IAAIb,EAA6B,MAApB,KAAKA,QAAQ,GACpB,SAAUkC,EAAKtB,EAAOuB,GAAO,OAAOD,EAAIlC,OAAOY,EAAOuB,IACtD,SAAUD,EAAKtB,EAAOuB,GAEpB,OADIvB,EAAQ,IAAGA,EAAQsB,EAAI3D,OAASqC,GAC7BsB,EAAIlC,OAAOY,EAAOuB,M,2MC3R3BC,EAAmBC,IAAMC,MAAK,kBAAM,wDAEpCC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAaRC,kBAAoB,WAClBC,IAAWC,cAAc,EAAKC,MAAMC,UAAW,EAAKD,MAAME,cAEvDC,MAAK,SAAAC,GACJC,QAAQC,IAAI,OAAQF,GACpB,EAAKG,SAAS,CACZC,aAAcJ,EAAKI,aACnBC,gBAAiBL,EAAKK,gBACtBC,eAAgBN,EAAKO,WACrBC,IAAKR,EAAKQ,IACVC,SAAUT,EAAKS,eAxBJ,EA6BnBC,WAAa,SAAAC,GACXV,QAAQC,IAAI,aAAcS,GAC1B,IAAMC,EAAOD,EACbC,EAAKC,MAAQ,EAAKjB,MAAMS,gBACxBO,EAAKP,gBAAkB,EAAKT,MAAMS,gBAElCX,IAAWoB,iBAAiB,EAAKlB,MAAMC,UAAW,EAAKD,MAAME,cADlC,EACoEc,GAC5Fb,MAAK,SAAAgB,GACJd,QAAQC,IAAI,8BAA+Ba,GACvCA,EAASC,KAEXf,QAAQC,IAAI,WAEZ,EAAKC,SAAS,CACZc,kBACE,2BAAOC,UAAW,gBAAlB,eACc,2BAAI,EAAKtB,MAAMS,iBAD7B,sBACoE,4BAAI,IAAIc,MAAOC,yBAM1FC,OAAM,SAAAC,GACLrB,QAAQsB,MAAM,6BAA8BD,GAC5C,EAAKnB,SAAS,CACZc,kBACE,kBAAC,IAAD,CACEO,aAAa,EACbC,QAAS,SACTC,QAAS,0BACTC,QACE,iFACqD,2BAAI,EAAK/B,MAAMS,0BA7D/D,EAsEnBuB,uBAAyB,WAEvB,EAAKzB,SAAS,CACZ0B,UAAU,KAzEK,EA6EnBC,eAAiB,WACf,GAAI,EAAKlC,MAAMiC,SACb,OAAO,kBAAC,IAAD,CAAUpE,GAAE,oBAAe,EAAKmC,MAAMC,UAA1B,wBAAmD,EAAKD,MAAMmC,gBAA9D,gBA7ErB,EAAKnC,MAAQ,CACXC,UAAW,EAAKL,MAAMwC,MAAMC,OAAOpC,UACnCC,aAAc,EAAKN,MAAMwC,MAAMC,OAAOnC,aACtCQ,eAAgB,KAChBE,IAAK,KACLJ,aAAc,GACdC,gBAAiB,GACjBY,kBAAmB,MAErB,EAAKiB,oBAAsB7C,IAAM8C,YAXhB,E,sEAyFjB,IAAIC,EAAY,QAUhB,MARwC,SAAtC/F,IAAKyC,QAAQuD,KAAKzC,MAAMa,WACc,SAAtCpE,IAAKyC,QAAQuD,KAAKzC,MAAMa,WACc,SAAtCpE,IAAKyC,QAAQuD,KAAKzC,MAAMa,WACc,UAAtCpE,IAAKyC,QAAQuD,KAAKzC,MAAMa,WACc,UAAtCpE,IAAKyC,QAAQuD,KAAKzC,MAAMa,YAExB2B,EAAY,SAGZ,oCACGC,KAAKP,iBACN,kBAAC,IAAD,CACEQ,MAAO,CACLC,gBAAiB,QAEnBC,OAAK,GAEL,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIN,MAAO,CAAEO,aAAc,MAC1D,kBAAC,IAAD,CACEN,gBAAiB,cACjBO,MAAO,CACL,CACEC,KAAM,WACNC,KAAM,aAER,CACED,KAAK,YAAD,OAAcV,KAAKzC,MAAMQ,cAC7B4C,KAAK,aAAD,OAAeX,KAAKzC,MAAMC,YAEhC,CACEkD,KAAM,eAER,CACEA,KAAK,GAAD,OAAKV,KAAKzC,MAAMS,uBAM7BgC,KAAKzC,MAAMqB,kBACmB,OAA9BoB,KAAKzC,MAAMU,gBACV,kBAAC,WAAD,CACE2C,SACE,kBAAC,IAAD,CAAWT,OAAK,GACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK5G,GAAI,GAAI6G,GAAI,EAAGC,GAAI,EAAGQ,GAAI,EAAGN,GAAI,GACpC,kBAAC,IAAD,CAAUnB,QAAQ,OAAO0B,MAAO,OAAQC,OAAQ,OAElD,kBAAC,IAAD,CAAKxH,GAAI,GAAI6G,GAAI,EAAGC,GAAI,EAAGQ,GAAI,EAAGN,GAAI,GACpC,kBAAC,IAAD,CAAUnB,QAAQ,OAAO0B,MAAO,OAAQC,OAAQ,OAElD,kBAAC,IAAD,CAAKxH,GAAI,GAAI6G,GAAI,EAAGC,GAAI,EAAGQ,GAAI,EAAGN,GAAI,GACpC,kBAAC,IAAD,CAAUnB,QAAQ,OAAO0B,MAAO,OAAQC,OAAQ,UAMxD,kBAAChE,EAAD,CACEiE,eAAgBhB,KAAKzC,MAAMU,eAC3BgD,SAAUjB,KAAKzC,MAAMY,IAErB+C,YAAY,EACZ1C,MAAOwB,KAAKzC,MAAMS,gBAClB+B,UAAWA,EACXoB,oBAAqB,mBACrBC,iBAAkBpB,KAAK3B,oB,GAhKPgD,aA2KjBnE","file":"static/js/17.eb7d5d04.chunk.js","sourcesContent":["// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","import React, { Component, Suspense } from 'react';\nimport path from 'path';\n// import './index.module.css';\n// import styles from './Transcript.module.css';\n// TODO: perhaps import TranscriptEditor on componentDidMount(?) to defer the load for later\n// https://facebook.github.io/create-react-app/docs/code-splitting\n// import TranscriptEditor from 'slate-transcript-editor';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Redirect } from 'react-router-dom';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb/index.js';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst TranscriptEditor = React.lazy(() => import('slate-transcript-editor'));\n\nclass TranscriptCorrect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.match.params.projectId,\n      transcriptId: this.props.match.params.transcriptId,\n      transcriptJson: null,\n      url: null,\n      projectTitle: '',\n      transcriptTitle: '',\n      savedNotification: null,\n    };\n    this.transcriptEditorRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getTranscript(this.state.projectId, this.state.transcriptId)\n      // TODO: add error handling\n      .then(json => {\n        console.log('json', json);\n        this.setState({\n          projectTitle: json.projectTitle,\n          transcriptTitle: json.transcriptTitle,\n          transcriptJson: json.transcript,\n          url: json.url,\n          clipName: json.clipName,\n        });\n      });\n  };\n\n  handleSave = autoSaveData => {\n    console.log('handleSave', autoSaveData);\n    const data = autoSaveData;\n    data.title = this.state.transcriptTitle;\n    data.transcriptTitle = this.state.transcriptTitle;\n    const queryParamsOptions = false;\n    ApiWrapper.updateTranscript(this.state.projectId, this.state.transcriptId, queryParamsOptions, data)\n      .then(response => {\n        console.log('ApiWrapper.updateTranscript', response);\n        if (response.ok) {\n          // show message or redirect\n          console.log('updated');\n          // More discrete auto save notification\n          this.setState({\n            savedNotification: (\n              <small className={'text-success'}>\n                Transcript: <b>{this.state.transcriptTitle}</b> has been saved at <b>{new Date().toLocaleString()}</b>\n              </small>\n            ),\n          });\n        }\n      })\n      .catch(e => {\n        console.error('error saving transcript:: ', e);\n        this.setState({\n          savedNotification: (\n            <CustomAlert\n              dismissable={true}\n              variant={'danger'}\n              heading={'Error saving transcript'}\n              message={\n                <p>\n                  There was an error trying to save this transcript: <b>{this.state.transcriptTitle}</b>\n                </p>\n              }\n            />\n          ),\n        });\n      });\n  };\n\n  redirectToAnnotatePage = () => {\n    // this.state.projectId this.state.transcriptId\n    this.setState({\n      redirect: true,\n    });\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to={`/projects/${this.state.projectId}/transcripts/${this.state.newTranscriptId}/annotate`} />;\n    }\n  };\n\n  render() {\n    // Workaround to change layout of TranscriptEditor for audio files.\n    // For now only handling limited numnber of file extension that have more of a certainty of being audio\n    // as opposed to more ambiguos extensions such as ogg or mp4 that could be either video or audio\n    // there might be better ways to determine if a clip is audio or video, especially node/\"server side\" but\n    // might also be more of a setup eg using ffprobe etc..\n    let mediaType = 'video';\n    if (\n      path.extname(this.state.clipName) === '.wav' ||\n      path.extname(this.state.clipName) === '.mp3' ||\n      path.extname(this.state.clipName) === '.m4a' ||\n      path.extname(this.state.clipName) === '.flac' ||\n      path.extname(this.state.clipName) === '.aiff'\n    ) {\n      mediaType = 'audio';\n    }\n    return (\n      <>\n        {this.renderRedirect()}\n        <Container\n          style={{\n            backgroundColor: '#eee',\n          }}\n          fluid\n        >\n          <br />\n          <Row>\n            <Col sm={12} md={12} ld={12} xl={12} style={{ marginBottom: '0' }}>\n              <CustomBreadcrumb\n                backgroundColor={'transparent'}\n                items={[\n                  {\n                    name: 'Projects',\n                    link: '/projects',\n                  },\n                  {\n                    name: `Project: ${this.state.projectTitle}`,\n                    link: `/projects/${this.state.projectId}`,\n                  },\n                  {\n                    name: 'Transcripts',\n                  },\n                  {\n                    name: `${this.state.transcriptTitle}`,\n                  },\n                ]}\n              />\n            </Col>\n          </Row>\n          {this.state.savedNotification}\n          {this.state.transcriptJson !== null && (\n            <Suspense\n              fallback={\n                <Container fluid>\n                  <Row>\n                    <Col xs={12} sm={3} md={3} lg={3} xl={3}>\n                      <Skeleton variant=\"rect\" width={'100%'} height={100} />\n                    </Col>\n                    <Col xs={12} sm={8} md={8} lg={8} xl={8}>\n                      <Skeleton variant=\"rect\" width={'100%'} height={600} />\n                    </Col>\n                    <Col xs={12} sm={1} md={1} lg={1} xl={1}>\n                      <Skeleton variant=\"rect\" width={'100%'} height={350} />\n                    </Col>\n                  </Row>\n                </Container>\n              }\n            >\n              <TranscriptEditor\n                transcriptData={this.state.transcriptJson} // Transcript json\n                mediaUrl={this.state.url} // string url to media file - audio or video\n                // showTitle={true}\n                isEditable={true} // se to true if you want to be able to edit the text\n                title={this.state.transcriptTitle}\n                mediaType={mediaType}\n                autoSaveContentType={'digitalpaperedit'}\n                handleSaveEditor={this.handleSave}\n                // handleAutoSaveChanges={ this.handleSave }\n              />\n            </Suspense>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TranscriptCorrect;\n"],"sourceRoot":""}