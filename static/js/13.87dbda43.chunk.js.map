{"version":3,"sources":["ApiWrapper/cors_wrapper.js","ApiWrapper/ApiWrapper.js","ApiWrapper/DemoApiWrapper/index.js","ApiWrapper/index.js","Util/which-js-env/index.js","Components/lib/CustomBreadcrumb/index.js","Util/includes-text/index.js","Components/lib/SearchBar/index.js","Components/lib/ItemForm/index.js","Components/lib/ItemFormModal/index.js","Components/lib/SimpleCard/index.js","Components/lib/List/index.js","Components/lib/ListPage/index.js","Components/lib/CustomTranscriptCard/index.js","Components/lib/ListPageTranscript/index.js","Components/lib/NoNeedToConvertNotice/index.js","Components/Transcripts/TranscriptForm.js","Components/Transcripts/NewTranscriptFormModal.js","Components/Transcripts/BatchTranscriptForm.js","Components/Transcripts/NewBatchTranscriptFormModal.js","Components/Transcripts/index.js","Components/PaperEdits/index.js","Components/Projects/Project.js"],"names":["METHODS","validateRESTMethod","method","includes","Error","getCorsConfig","corsConfig","data","applicationType","mode","body","JSON","stringify","headers","corsFetch","url","a","async","fetch","ApiWrapper","projectsIdUrl","projectId","projectsUrl","transcriptsUrl","transcriptsIdUrl","transcriptId","queryParamsOptions","queryParams","querystring","trim","paperEditsUrl","paperEditsIdUrl","paperEditId","annotationsUrl","annotationsIdUrl","annotationId","labelsUrl","labelsIdUrl","labelsId","this","baseUrl","window","env","API_URL","res","json","projects","id","getProject","resProject","projectTitle","project","title","transcriptTitle","labelId","paperedits","getTranscript","transcriptResult","getAllLabels","labelsResults","getAllAnnotations","annotationsResult","results","labels","transcript","annotations","papereditId","getTranscripts","transcriptsResult","Promise","all","transcripts","map","transcriptsJson","annotationsJson","forEach","tr","currentAnnotationsSet","find","getPaperEdit","paperEditResult","projectResult","programmeScript","fileName","resolve","reject","input","output","ffmpegPath","waveForm","waveFormMode","waveFormColor","DemoApiWrapper","response","length","_id","status","alert","ok","filter","formData","annotation","defaultLabel","label","unshift","paperedit","paperEdit","statusCode","jsENV","whichJsEnv","console","log","demoApiWrapper","Object","freeze","apiWrapper","electronWrapper","ElectronWrapper","adobeCEPWrapper","AdobeCEPWrapper","undefined","process","versions","electron","debug","cep","error","CustomBreadcrumb","breadcrumbs","props","items","item","index","link","key","to","Item","name","active","scoped","backgroundColor","Component","includesText","textOne","textTwo","toLowerCase","SearchBar","handleSearch","e","searchText","target","value","handleShowSearchBar","setState","state","showSearchInput","className","Prepend","onClick","Text","icon","faSearch","style","display","onChange","placeholder","aria-label","aria-describedby","React","ItemForm","handleTitleChange","event","handleDescriptionChange","description","validated","form","currentTarget","checkValidity","preventDefault","stopPropagation","tmpItem","handleSaveForm","Form","noValidate","onSubmit","handleSubmit","Group","controlId","Label","Control","required","type","Feedback","Modal","Footer","Button","variant","ItemFormModal","handleClose","handleCloseModal","show","onHide","Header","closeButton","Title","modalTitle","Body","SimpleCard","handleDelete","confirm","handleEdit","showLinkPath","ListGroup","Row","cursor","Col","xs","sm","md","ld","xl","Card","href","Link","size","faPen","faTrash","Subtitle","List","listItems","height","overflow","Page","handleUpdateList","searchEl","handleShowCreateNewItemForm","block","model","CustomTranscriptCard","errorMessageAlert","showLink","Alert","faExclamationTriangle","errorMessage","Badge","disabled","Spinner","as","animation","role","aria-hidden","faCheck","subtitle","sttEngine","clipName","Accordion","Toggle","eventKey","Collapse","ListPageTranscript","itemsCards","content","lg","handleShowCreateNewBatchForm","NoNeedToConvertNotice","CustomAlert","dismissable","heading","message","rel","TranscriptForm","handleAdobeCepSetFilePath","__adobe_cep__","evalScript","path","basename","adobeCepFilePath","handleFileUpload","file","Array","from","files","FormData","append","mediaFileSelected","sendRequest","uploading","get","createTranscript","then","uploadCompleted","redirect","newTranscriptId","catch","savedNotification","accept","NewTranscriptFormModal","BatchTranscriptForm","listOfFilesPath","getAll","filePath","listOfFiles","listOfFileTypes","individualFile","individualFileFormData","multiple","NewBatchTranscriptFormModal","Transcripts","componentWillUnmount","interval","clearInterval","result","tmpList","areThereTranscriptsInProgress","handleSaveItem","newItem","newitems","push","itemId","isNewItemModalShow","handleSaveBatch","itemsProps","isNewBatchModalShow","newItems","itemsList","newItemsList","handleSaveEditedItem","newEditedItem","itemIdex","findIndex","updateTranscript","isEditItemModalShow","findItemById","list","p","handleEditItem","handleCloseBatchModal","handleCloseModalEdit","isServerError","bind","setInterval","deleteTranscript","findId","tmpNewList","Container","marginBottom","marginTop","faFileAlt","color","PaperEdits","updatePaperEdit","createPaperEdit","handleDeleteItem","getAllPaperEdits","deletePaperEdit","ListPage","faColumns","Project","context","match","params","projectName","Tabs","activeKey","onSelect","Tab"],"mappings":"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","file":"static/js/13.87dbda43.chunk.js","sourcesContent":["/**\n * Helper function tto wrap fetch post request\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options\n * @param {string} url - API end point\n * @param {object} data - json data to send\n */\n\nconst METHODS = [ 'GET', 'POST', 'PUT', 'DELETE' ];\n\nconst validateRESTMethod = (method) => {\n  if (!METHODS.includes(method)) {\n    throw new Error(`Wrong method passed ${ method } - should be one of ${ METHODS }`);\n  }\n\n  return;\n\n};\n\nconst getCorsConfig = (method, data = {}, applicationType) => {\n  let corsConfig;\n\n  if (method === 'PUT') {\n    corsConfig = {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } else if (method === 'POST') {\n\n    corsConfig = {\n      method: method,\n      // TODO: commenting all of these settings out as with those on file upload doesn't work :man-shrugging: . Needs further investigation.\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      // credentials: 'same-origin',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // redirect: 'follow',\n      // referrer: 'no-referrer',\n      // NOTE: Form data contains a file, so should not be stringified\n      // body: data\n    };\n    // if sending data as a json file\n    if (applicationType === 'json') {\n      corsConfig.headers = {\n        'Content-Type': 'application/json'\n      };\n      corsConfig.body = JSON.stringify(data);\n    }\n    // if sending something else like a video or audio file in form body\n    else {\n      corsConfig.body = data;\n    }\n  }\n  else {\n    corsConfig = {\n      method: method,\n      mode: 'cors'\n    };\n  }\n\n  return corsConfig;\n};\n\nasync function corsFetch(url, method = 'GET', data = {}, applicationType) {\n  validateRESTMethod(method);\n  const corsConfig = getCorsConfig(method, data, applicationType);\n\n  return await fetch(url, corsConfig);\n}\n\nexport default corsFetch;\n","import querystring from 'querystring';\nimport corsFetch from './cors_wrapper.js';\n\nclass ApiWrapper {\n  constructor() {\n    this.baseUrl = window.env.API_URL;\n    window.env.API_URL = null;\n\n    this.projectsUrl = `${ this.baseUrl }/api/projects`;\n  }\n  projectsIdUrl = (projectId) => `${ this.projectsUrl }/${ projectId }`;\n\n  transcriptsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/transcripts`;\n  transcriptsIdUrl = (projectId, transcriptId, queryParamsOptions) => {\n    const queryParams = queryParamsOptions\n      ? `?${ querystring.stringify(queryParamsOptions) }`\n      : '';\n\n    return `${ this.transcriptsUrl(projectId) }/${ transcriptId }${ queryParams }`.trim();\n  };\n\n  paperEditsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/paperedits`;\n  paperEditsIdUrl = (projectId, paperEditId) => `${ this.projectsIdUrl(projectId) }/paperedits/${ paperEditId }`;\n\n  annotationsUrl = (projectId, transcriptId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations`;\n  annotationsIdUrl = (projectId, transcriptId, annotationId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations/${ annotationId }`;\n\n  labelsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/labels`;\n  labelsIdUrl = (projectId, labelsId) => `${ this.projectsIdUrl(projectId) }/labels/${ labelsId }`;\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const res = await corsFetch(this.projectsUrl);\n    const json = await res.json();\n\n    return json.projects;\n  }\n\n  async getProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createProject(data) {\n    const res = await corsFetch(this.projectsUrl, 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateProject(id, data) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Transcripts\n   */\n  async getTranscripts(projectId) {\n    const res = await corsFetch(this.transcriptsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createTranscript(projectId, data) {\n    const res = await corsFetch(this.transcriptsUrl(projectId), 'POST', data);\n    const json = await res.json();\n\n    return json;\n  }\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions));\n    const json = await res.json();\n    // get project title\n    const resProject = await this.getProject(projectId);\n    // console.log('resProject', resProject.project.title, json);\n    json.projectTitle = resProject.project.title;\n    json.transcriptTitle = json.title;\n    delete json.title;\n\n    return json;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions), 'PUT', data);\n\n    return res;\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Annotations\n   */\n  async getAllAnnotations(projectId, transcriptId) {\n    const res = await fetch(this.annotationsUrl(projectId, transcriptId));\n    // console.log('getAllAnnotations', res);\n    const json = await res.json();\n\n    return json;\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    const res = await corsFetch(this.annotationsUrl(projectId, transcriptId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateAnnotation(projectId, transcriptId, annotationId, data) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  async getAllLabels(projectId) {\n    const res = await fetch(this.labelsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    const res = await corsFetch(this.labelsUrl(projectId), 'POST', data, 'json');\n    const json = await res.json();\n\n    return json;\n  }\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n  /**\n   * PaperEdits\n   */\n  async getAllPaperEdits(projectId) {\n    const res = await corsFetch(this.paperEditsUrl(projectId));\n    const json = await res.json();\n\n    return json.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createPaperEdit(projectId, data) {\n    const res = await corsFetch(this.paperEditsUrl(projectId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deletePaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) {\n    // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    // TODO: also add annotations for each Transcripts\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      // const annotations = this.getAllAnnotations(projectId, transcript.id);\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n      // transcriptTmp.annotations = annotations;\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n\n  async exportVideo(data, fileName){\n    return new Promise((resolve, reject) => {\n      // In electron prompt for file destination \n      // default to desktop on first pass \n      const ffmpegRemixData = {\n        input: data, \n        output: `~/Desktop/${fileName}`,\n        ffmpegPath: ''//add electron ffmpeg bin \n      }\n      resolve(ffmpegRemixData)\n    })\n  }\n\n  async exportAudio(data, fileName,waveForm, waveFormMode, waveFormColor){\n    return new Promise((resolve, reject) => {\n      // In electron prompt for file destination \n      // default to desktop on first pass \n      const ffmpegRemixData = {\n        input: data, \n        output: `~/Desktop/${fileName}`,\n        ffmpegPath: ''//add electron ffmpeg bin \n      }\n      resolve(ffmpegRemixData)\n    })\n  }\n}\n\nexport default ApiWrapper;","class DemoApiWrapper {\n  /**\n   * Projects\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllProjects() {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    let results = 0;\n    if (projects.length !== 0) {\n      results = projects.map((project) => {\n        project.id = project._id;\n\n        return project;\n      });\n\n      return results;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getProject(id) {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    const project = projects.find((project) => {\n      return project._id === id;\n    });\n\n    return { status: 'ok', project:project };\n  }\n\n  async createProject(data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async updateProject(id, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async deleteProject(id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false', project: { } };\n  }\n\n  /**\n   * Transcripts\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getTranscripts(projectId) {\n    const response = await fetch('db/transcripts.json');\n    let transcripts = await response.json();\n    transcripts = transcripts.filter((transcript) => {\n      return transcript.projectId === projectId;\n    });\n\n    transcripts = transcripts.map((transcript) => {\n      transcript.id = transcript._id;\n\n      return transcript;\n    });\n\n    return { transcripts: transcripts };\n  }\n\n  async createTranscript(projectId, formData, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const response = await fetch('db/transcripts.json');\n    const transcripts = await response.json();\n    const transcript = transcripts.find((transcript) => {\n      return transcript._id === transcriptId;\n    });\n\n    transcript.id = transcript._id;\n    const resProject = await this.getProject(projectId);\n    transcript.projectTitle = resProject.project.title;\n    transcript.transcriptTitle = transcript.title;\n\n    return transcript;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false };\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Annotations\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllAnnotations(projectId, transcriptId) {\n\n    const response = await fetch('db/annotations.json');\n    let annotations = await response.json();\n\n    annotations = annotations.filter((annotation) => {\n      return annotation.transcriptId === transcriptId;\n    });\n\n    if (annotations) {\n      annotations = annotations\n        .map((annotation) => {\n          annotation.id = annotation._id;\n\n          return annotation;\n        });\n    } else {\n      annotations = [];\n    }\n\n    return { annotations };\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const response = await fetch('db/annotations.json');\n    const annotations = await response.json();\n    const annotation = annotations[0];\n\n    return { annotation };\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false', annotation: [] };\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false' };\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  // eslint-disable-next-line class-methods-use-this\n  async getAllLabels(projectId) {\n    const response = await fetch('db/labels.json');\n    let labels = await response.json();\n    const defaultLabel = labels[0];\n    labels = labels.filter((label) => {\n      return label.projectId === projectId;\n    });\n    labels.unshift(defaultLabel);\n\n    if (!labels) {\n      labels = [];\n    }\n\n    return { ok: true, status: 'ok', labels };\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const response = await fetch('db/labels.json');\n    const labels = await response.json();\n    const label = labels[0];\n\n    return { ok: true, status: 'ok', label };\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return ({ ok: false, status: 'false' });\n  }\n\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n  /**\n   * PaperEdits\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllPaperEdits(projectId) {\n    const response = await fetch('db/paperedits.json');\n    let paperedits = await response.json();\n    paperedits = paperedits.filter((paperedit) => {\n      return paperedit.projectId === projectId;\n    });\n    const data = {};\n    data.paperedits = [];\n    data.paperedits = paperedits;\n    if (data.paperedits) {\n      data.paperedits = data.paperedits\n        .map((paperedit) => {\n          paperedit.id = paperedit._id;\n\n          return paperedit;\n        });\n    }\n\n    return data.paperedits;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getPaperEdit(projectId, id) {\n    const paperEditId = id;\n    const response = await fetch('db/paperedits.json');\n    const paperedits = await response.json();\n    const paperEdit = paperedits.find((paperedit) => {\n      return paperedit.id === paperEditId;\n    });\n    if (!paperEdit) {\n      const err = new Error('No paper edit found');\n      err.statusCode = 404;\n    }\n\n    return { ok: true, status: 'ok', programmeScript: paperEdit };\n  }\n\n  async createPaperEdit(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok:true, status: 'false' };\n  }\n\n  async deletePaperEdit(projectId, id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) { // // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\n// module.exports = DemoApiWrapper;\nexport default DemoApiWrapper;","import ApiWrapper from './ApiWrapper';\nimport DemoApiWrapper from './DemoApiWrapper/index.js';\nimport whichJsEnv from '../Util/which-js-env';\n\nconst jsENV = whichJsEnv();\n\n// dynamic export\n// https://medium.com/@WebReflection/javascript-dynamic-import-export-b0e8775a59d4\nexport default (() => {\n  // await async dependencies\n  // export the module\n  if (jsENV === 'demo') {\n    console.log('API Wrapper demo time!');\n    const demoApiWrapper = new DemoApiWrapper();\n    Object.freeze(demoApiWrapper);\n\n    return demoApiWrapper;\n  }\n  if (jsENV === 'browser') {\n    const apiWrapper = new ApiWrapper();\n    Object.freeze(apiWrapper);\n\n    return apiWrapper;\n  }\n  if (jsENV === 'electron') {\n    // try {\n    //   const { ipcRenderer } = require('electron');\n    //   const appPath = ipcRenderer.sendSync('synchronous-message-get-app-path', 'ping');\n    // const path = require('path');\n    // console.log(window.appPath, 'window.AppPath', 'process.cwd()', process.cwd());\n    //   window.process.chdir(appPath);\n    // const ElectronWrapper = require(path.join(window.appPath, 'src', 'ElectronWrapper', 'index.js'));\n    const ElectronWrapper = window.ElectronWrapper;\n    const electronWrapper = new ElectronWrapper();\n    Object.freeze(electronWrapper);\n    return electronWrapper;\n    // } catch (e) {\n    //   console.error('api wrapper electron', e);\n    // }\n  }\n  if (jsENV === 'cep') {\n    // TODO: not sure if this will work\n    // try {\n    // console.log('__dirname', __dirname);\n    // console.log('process.cwd()', process.cwd());\n    // /////////////////////////\n    // console.log('  process.chdir(__dirname);');\n    // process.chdir(__dirname);\n    // /////////////////////////\n    // console.log('__dirname', __dirname);\n    // console.log('process.cwd()', process.cwd());\n\n    // const path = require('path');\n    // const AdobeCEPWrapper = require(path.join(__dirname, 'src', 'AdobeCEPWrapper', 'index.js'));\n    // window.AdobeCEPWrapper = AdobeCEPWrapper;\n\n    const AdobeCEPWrapper = window.AdobeCEPWrapper;\n    const adobeCEPWrapper = new AdobeCEPWrapper();\n    Object.freeze(adobeCEPWrapper);\n\n    return adobeCEPWrapper;\n    // } catch (err) {\n    //   console.log('chdir: ' + err);\n    // }\n  }\n})();\n","/**\n * Determines the enviroment Javascript is being run on\n * @returns - 'browser', 'electron', 'cep'. where cep stands for adobe CEP panel\n */\nfunction whichJsEnv() {\n  // Is browser Eg client side app\n  if (window.process === undefined) {\n    // console.debug('In browser Environment');\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      return 'demo';\n    }\n\n    return 'browser';\n  } else {\n    if (window.process.versions.electron !== undefined) {\n      console.debug('In Electron Enviroment');\n      //   console.info('In Electron v: ', window.process.versions.electron);\n      //   console.info('Using chrome v: ', window.process.versions.chrome);\n      return 'electron';\n    } else if (window.process.versions.cep !== undefined) {\n      console.debug('In Adobe CEP Environment');\n      //   console.info('In Chromium v: ', window.process.versions.chromium);\n      //   console.info('In CEP (Adobe Common Extensibility Platform ) v: ', window.process.versions.cep);\n      //   console.info('adjusting current working directory for Adobe CEP');\n      //   console.log('Starting directory: ' + process.cwd());\n      // try {\n      //   // commenting out because of error \"chdir: Error: process.chdir is not supported\"\n      //   // process.chdir(__dirname);\n      //   // process.chdir('..');\n      //   // console.log('New directory: ' + process.cwd());\n      // }\n      // catch (err) {\n      //   console.log('chdir: ' + err);\n      // }\n      return 'cep';\n    } else {\n      console.error(\"couldn't determine the js environment\");\n\n      return undefined;\n    }\n  }\n}\n\nfunction isBrowser() {\n  return whichJsEnv() === 'browser';\n}\n\nfunction isElectron() {\n  return whichJsEnv() === 'electron';\n}\n\nfunction isCep() {\n  return whichJsEnv() === 'isCep';\n}\n\nexport default whichJsEnv;\n\nexport { isElectron, isBrowser, isCep, whichJsEnv };\n","import React, { Component } from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass CustomBreadcrumb extends Component {\n\n  render() {\n    const breadcrumbs = this.props.items.map((item, index) => {\n      if (item.link) {\n        return (\n          <LinkContainer key={ index } to={ item.link }>\n            <Breadcrumb.Item>{item.name}</Breadcrumb.Item>\n          </LinkContainer>\n        );\n      } else {\n        return (\n          <Breadcrumb.Item key={ index } active>\n            {item.name}\n          </Breadcrumb.Item>\n        );\n      }\n    });\n\n    return (\n      <>\n      <style scoped>\n        {`\n        .breadcrumb{ \n          background-color: ${this.props.backgroundColor};\n          ${this.props.backgroundColor? ' margin: 0px':''} \n          }\n        `}\n      </style>\n      <div\n      // className=\"d-none d-sm-block\"\n      >\n        <Breadcrumb>\n          {breadcrumbs}\n        </Breadcrumb>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default CustomBreadcrumb;\n","const includesText = (textOne, textTwo) => {\n  return textOne\n    .toLowerCase()\n    .trim()\n    .includes(textTwo.toLowerCase().trim());\n};\n\nexport default includesText;\n","import React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = e => {\n    const searchText = e.target.value;\n    this.props.handleSearch(searchText);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend\n          onClick={ this.handleShowSearchBar }\n        >\n          <InputGroup.Text id=\"basic-addon2\">\n            <FontAwesomeIcon icon={ faSearch } />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          style={ { display: this.state.showSearchInput ? '' : 'none' } }\n          onChange={ this.handleSearch }\n          placeholder=\"Search\"\n          aria-label=\"search\"\n          aria-describedby=\"search\"\n        />\n      </InputGroup>\n    );\n  }\n}\n\nexport default SearchBar;\n","// https://react-bootstrap.netlify.com/components/forms/#forms-validation\n// https://reactjs.org/docs/forms.html\n\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // TODO: Tmp title text for debugging, remove for production\n      // replace with ''\n      title: this.props.title,\n      description: this.props.description,\n      validated: false,\n      id: this.props.id\n    };\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      const tmpItem = {\n        title: this.state.title,\n        description: this.state.description,\n        id: this.state.id\n      };\n      this.props.handleSaveForm(tmpItem);\n    }\n\n    //this.setState({ redirect: true, newProjectId: response.projectId });\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  render() {\n    return (\n\n      <Form\n        noValidate\n        validated={ this.state.validated }\n        onSubmit={ e => this.handleSubmit(e) }\n      >\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Title </Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter a project title\"\n            value={ this.state.title }\n            onChange={ this.handleTitleChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose a title\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a title\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Description </Form.Label>\n          <Form.Control\n            // required\n            // as=\"textarea\" rows=\"3\"\n            type=\"text\"\n            placeholder=\"Enter a project description\"\n            value={ this.state.description }\n            onChange={ this.handleDescriptionChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose an optional description\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a description\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </Modal.Footer>\n      </Form>\n    );\n  }\n}\n\nexport default ItemForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport ItemForm from '../ItemForm';\n\nclass ItemFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ItemForm\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default ItemFormModal;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPen } from '@fortawesome/free-solid-svg-icons';\n\nclass SimpleCard extends Component {\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\"Click OK if you wish to delete, cancel if you don't\");\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  };\n  showLinkPath = () => {\n    return this.props.showLinkPath(this.props.id);\n  };\n\n  render() {\n    return (\n      <ListGroup.Item>\n        {/* <Card.Body> */}\n        <Row>\n          <LinkContainer to={this.showLinkPath()} style={{ cursor: 'pointer' }}>\n            <Col xs={8} sm={10} md={10} ld={10} xl={10}>\n              <Card.Title>\n                {this.props.icon} <a href={`#/${this.showLinkPath()}`}>{this.props.title}</a>\n              </Card.Title>\n            </Col>\n          </LinkContainer>\n          <Col xs={2} sm={1} md={1} ld={1} xl={1}>\n            <Card.Link>\n              <Button onClick={this.handleEdit} variant=\"secondary\" size=\"sm\">\n                <FontAwesomeIcon icon={faPen} />\n              </Button>\n            </Card.Link>\n          </Col>\n          <Col xs={2} sm={1} md={1} ld={1} xl={1}>\n            <Card.Link>\n              <Button onClick={this.handleDelete} variant=\"secondary\" size=\"sm\">\n                <FontAwesomeIcon icon={faTrash} />\n              </Button>\n            </Card.Link>\n          </Col>\n        </Row>\n        <LinkContainer to={this.showLinkPath()} style={{ cursor: 'pointer' }}>\n          <Row>\n            <Col xs={10} sm={11} md={11} ld={11} xl={11}>\n              <Card.Subtitle className=\"mb-2 text-muted\">{this.props.description}</Card.Subtitle>\n            </Col>\n          </Row>\n        </LinkContainer>\n        {/* </Card.Body> */}\n      </ListGroup.Item>\n    );\n  }\n}\n\nexport default SimpleCard;\n","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport SimpleCard from '../SimpleCard';\n\nclass List extends React.Component {\n\n  render() {\n\n    const listItems = this.props.items.map((item) => {\n      if (item.display) {\n        return <SimpleCard\n          key={ item.id }\n          id={ item.id }\n          title={ item.title }\n          icon={ this.props.icon }\n          description={ item.description }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        />;\n      } else {\n        return null;\n      }\n    }).filter(item => {\n      return item !== null;\n    });\n\n    return (<>\n      <ListGroup \n      style={ { height: '75vh', overflow: 'scroll' } } \n      // variant=\"flush\"\n      >\n        {listItems}\n      </ListGroup>\n    </>\n    );\n  }\n}\n\nexport default List;\n","import React from 'react';\nimport List from '../List';\nimport includesText from '../../../Util/includes-text/index.js';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n    this.props.handleUpdateList(results);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    let searchEl;\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n\n    return (<>\n\n      <Row>\n        <Col sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n          {searchEl}\n        </Col>\n\n        <Col xs={ 12 } sm={ 3 } md={ 3 } ld={ 3 } xl={ 3 }>\n          <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"secondary\" size=\"sm\" block>\n                New {this.props.model}\n          </Button>\n        </Col>\n      </Row>\n\n      {(this.props.items && this.props.items.length === 0) ? <i>There are no {this.props.model}, create a new one to get started</i> : null}\n\n      {this.props.items ?\n        <List\n          icon={this.props.icon}\n          items={ this.props.items }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        /> : null}\n\n    </>);\n  }\n}\n\nexport default Page;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Alert from 'react-bootstrap/Alert';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faCheck, faExclamationTriangle, faPen } from '@fortawesome/free-solid-svg-icons';\n\nclass CustomTranscriptCard extends Component {\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\"Click OK if you wish to delete, cancel if you don't\");\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  };\n\n  // TODO: this can be refactored to clean up the logic\n  render() {\n    let status;\n    let errorMessageAlert;\n    // let statusBadge;\n    if (this.props.status === 'error') {\n      status = 'danger';\n    }\n    if (this.props.status === 'in-progress') {\n      status = 'info';\n      // statusBadge = <Badge variant=\"info\">In progress</Badge>;\n    }\n    if (this.props.status === 'done') {\n      // statusBadge = <Badge variant=\"success\">Success</Badge>;\n      status = 'success';\n    }\n    // let borderStatus;\n    // let showBtn = <a href={ `#${ this.props.showLink() }` }>  Show btn</a>;\n    let title = <a href={`#${this.props.showLink()}`}> {this.props.title}</a>;\n    if (status && status === 'info') {\n      title = this.props.title;\n    }\n    if (status && status === 'danger') {\n      title = this.props.title;\n      // borderStatus = 'danger';\n    }\n\n    if (this.props.status === 'error') {\n      errorMessageAlert = (\n        <>\n          <Alert variant=\"danger\">\n            <FontAwesomeIcon icon={faExclamationTriangle} /> {this.props.errorMessage}\n          </Alert>\n          <Badge variant=\"danger\">Error</Badge>\n        </>\n      );\n    }\n\n    return (\n      <ListGroup.Item>\n        <Row>\n          <Col xs={12} sm={9} md={9} ld={9} xl={9}>\n            <Card.Title>\n              {this.props.icon ? this.props.icon : ''} {title}\n            </Card.Title>\n          </Col>\n          <Col xs={2} sm={1} md={1} ld={1} xl={1}>\n            <Card.Link>\n              <Button onClick={this.handleEdit} variant=\"secondary\" size=\"sm\">\n                <FontAwesomeIcon icon={faPen} />\n              </Button>\n            </Card.Link>\n          </Col>\n          <Col xs={2} sm={1} md={1} ld={1} xl={1}>\n            <Card.Link>\n              <Button onClick={this.handleDelete} variant=\"secondary\" size=\"sm\">\n                <FontAwesomeIcon icon={faTrash} />\n              </Button>\n            </Card.Link>\n          </Col>\n          <Col xs={1} sm={1} md={1} ld={1} xl={1}>\n            {status && status === 'info' ? (\n              <Button variant=\"info\" size=\"sm\" disabled>\n                <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n              </Button>\n            ) : (\n              ''\n            )}\n            {status && status === 'danger' ? (\n              <Button variant=\"danger\" size=\"sm\" disabled>\n                <FontAwesomeIcon icon={faExclamationTriangle} />\n              </Button>\n            ) : (\n              ''\n            )}\n            {status && status === 'success' ? (\n              <Button variant=\"success\" size=\"sm\" disabled>\n                <FontAwesomeIcon icon={faCheck} />\n              </Button>\n            ) : (\n              ''\n            )}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} sm={12} md={12} ld={12} xl={12}>\n            <Card.Subtitle className=\"mb-2 text-muted\">{this.props.subtitle}</Card.Subtitle>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={12} ld={12} xl={12}>\n            {this.props.sttEngine && this.props.clipName && (\n              <Accordion>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                  <Badge variant=\"light\">Info</Badge>\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\">\n                  <>\n                    {this.props.sttEngine ? (\n                      <>\n                        STT Engine: <Badge variant=\"light\">{this.props.sttEngine}</Badge>\n                      </>\n                    ) : null}\n                    <br />\n                    {this.props.clipName ? (\n                      <>\n                        File Name: <Badge variant=\"light\">{this.props.clipName}</Badge>\n                      </>\n                    ) : null}\n                  </>\n                </Accordion.Collapse>\n              </Accordion>\n            )}\n          </Col>\n        </Row>\n\n        {errorMessageAlert ? (\n          <>\n            <Row>\n              <Col xs={12} sm={12} md={12} ld={12} xl={12}>\n                {errorMessageAlert}\n              </Col>\n            </Row>\n          </>\n        ) : null}\n      </ListGroup.Item>\n    );\n  }\n}\n\nexport default CustomTranscriptCard;\n","import React, { Component } from 'react';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport CustomTranscriptCard from '../CustomTranscriptCard';\nimport includesText from '../../../Util/includes-text';\nimport whichJsEnv from '../../../Util/which-js-env';\n// TODO: add error handling, eg custom alert if server is not responding\nclass ListPageTranscript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false,\n    };\n  }\n\n  handleSearch = searchText => {\n    console.log('searchText', searchText);\n    const results = this.props.items.filter(transcript => {\n      console.log('transcript', transcript);\n      if (\n        (transcript.title && includesText(transcript.title, searchText)) ||\n        (transcript.description && includesText(transcript.description, searchText)) ||\n        (transcript.clipName && includesText(transcript.clipName, searchText)) ||\n        (transcript.sttEngine && includesText(transcript.sttEngine, searchText))\n      ) {\n        transcript.display = true;\n\n        return transcript;\n      } else {\n        transcript.display = false;\n\n        return transcript;\n      }\n    });\n\n    this.props.handleUpdateList(results);\n  };\n\n  render() {\n    let itemsCards;\n    let description;\n    if (this.props.items) {\n      itemsCards = this.props.items\n        .map(item => {\n          if (item.display) {\n            return (\n              <CustomTranscriptCard\n                sttEngine={item.sttEngine}\n                clipName={item.clipName}\n                icon={this.props.icon}\n                key={'key__' + item.id}\n                id={item.id}\n                projectId={item.id}\n                title={item.title}\n                subtitle={item.description}\n                handleEdit={this.props.handleEdit}\n                handleDelete={() => {\n                  this.props.handleDelete(item.id);\n                }}\n                // To be able to do REST for cards for - Projects, transcripts, paperedits\n                showLink={() => {\n                  return this.props.showLinkPath(item.id);\n                }}\n                status={item.status}\n                description={description}\n                disabled={item.status === 'done' ? true : false}\n                errorMessage={item.status === 'error' ? item.errorMessage : null}\n              />\n            );\n          } else {\n            return null;\n          }\n        })\n        .filter(item => {\n          return item !== null;\n        });\n    }\n\n    let content;\n    let searchEl;\n    // TODO: better error handling\n    // eg there should be a loading/fetching? and then if it gets error 404 or 505(?) from server\n    // then it displays error from server\n    // also add `navigator.onLine` to raise error if offline?\n\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = <SearchBar handleSearch={this.handleSearch} />;\n    }\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      content = (\n        <>\n          <ListGroup\n            style={{ height: '75vh', overflow: 'scroll' }}\n            //  variant=\"flush\"\n          >\n            {itemsCards}\n          </ListGroup>\n        </>\n      );\n    } else {\n      content = <i>No {this.props.model}, create a new one to get started </i>;\n    }\n\n    return (\n      <>\n        <Row>\n          <Col xs={12} sm={6} md={7} lg={7} xl={7}>\n            {searchEl}\n          </Col>\n          {whichJsEnv() !== 'cep' ? (\n            <>\n              <Col xs={12} sm={3} md={2} lg={2} xl={2}>\n                <Button onClick={this.props.handleShowCreateNewItemForm} variant=\"secondary\" size=\"sm\" block>\n                  New {this.props.model}\n                </Button>\n              </Col>\n              <Col xs={12} sm={3} md={3} lg={3} xl={3}>\n                <Button onClick={this.props.handleShowCreateNewBatchForm} variant=\"secondary\" size=\"sm\" block>\n                  New Batch {this.props.model}s\n                </Button>\n              </Col>\n            </>\n          ) : (\n            <Col xs={12} sm={6} md={5} lg={5} xl={5}>\n              <Button onClick={this.props.handleShowCreateNewItemForm} variant=\"secondary\" size=\"sm\" block>\n                New {this.props.model}\n              </Button>\n            </Col>\n          )}\n        </Row>\n        {content}\n      </>\n    );\n  }\n}\n\nexport default ListPageTranscript;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport CustomAlert from '../CustomAlert/index.js';\n\nfunction NoNeedToConvertNotice(props) {\n  return (\n    <CustomAlert dismissable={true} variant={'info'} heading={''} message={''}>\n      <b> You don't need to convert your media before adding it to the app.</b>\n      <Form.Text>\n        <a\n          href=\"https://autoedit.gitbook.io/autoedit-3-user-manual/transcriptions/create-a-new-transcription\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          see user manual for more details\n        </a>\n      </Form.Text>\n    </CustomAlert>\n  );\n}\n\nexport default NoNeedToConvertNotice;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\nimport path from 'path';\nimport NoNeedToConvertNotice from '../lib/NoNeedToConvertNotice/index.js';\n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass TranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      adobeCepFilePath: null,\n      savedNotification: null,\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // This is used in Aobe CEP Panel integration only\n  handleAdobeCepSetFilePath = () => {\n    window.__adobe_cep__.evalScript(`$._PPP.get_current_project_panel_selection_absolute_path()`, response => {\n      console.log('handleAdobeCepSetFilePath');\n      if (response !== '') {\n        console.log('handleAdobeCepSetFilePath', response);\n        //  const newFilePath = response;\n        //  fileName = path.basename(newFilePath);\n        // TODO: add some visual quee that this worked (eg alert box at top? or file name/path somewhere)\n        this.setState({\n          title: path.basename(response),\n          adobeCepFilePath: response,\n        });\n      } else {\n        // TODO: review logic for edge case\n        alert('select a clip');\n      }\n    });\n  };\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n    const formData = new FormData();\n    formData.append('file', file, file.name);\n    formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    if (file.path) {\n      formData.append('path', file.path);\n    }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    if (this.state.title === '') {\n      this.setState({ title: file.name });\n    }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n\n    const formData = this.state.formData;\n    if (whichJsEnv() !== 'cep') {\n      formData.append('title', this.state.title);\n      formData.append('description', this.state.description);\n      console.log(\"formData.get('path')\", formData.get('path'));\n    }\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      // if client run inside of electron\n      // is easier to pass another object with title, description\n      // as well as the additional path to the file\n      // rather then parsing a formData object in node etc..\n      data = {\n        title: formData.get('title'),\n        description: formData.get('description'),\n        path: formData.get('path'),\n      };\n    }\n\n    if (whichJsEnv() === 'cep') {\n      data = {\n        title: this.state.title,\n        description: this.state.description,\n        path: this.state.adobeCepFilePath,\n      };\n    }\n    // TODO: do you need a try catch?\n    try {\n      ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n        .then(response => {\n          console.log('ApiWrapper.createTranscript-response ', response);\n          // show message or redirect\n          this.setState({\n            uploading: false,\n            uploadCompleted: true,\n            redirect: true,\n            newTranscriptId: response.transcriptId,\n          });\n          this.props.handleSaveForm(response.transcript);\n          // this.props.handleCloseModal();\n        })\n        .catch(e => {\n          console.log('error:::: ', e);\n          this.setState({\n            uploading: false,\n            redirect: false,\n            savedNotification: (\n              <CustomAlert\n                dismissable={true}\n                variant={'danger'}\n                heading={'Error could not contact the server'}\n                message={<p>There was an error trying to create this transcript on the server</p>}\n              />\n            ),\n          });\n        });\n    } catch (e) {\n      console.error('error submitting:::', e);\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('(form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        {whichJsEnv() === 'electron' && <NoNeedToConvertNotice />}\n\n        <Form noValidate validated={this.state.validated} onSubmit={e => this.handleSubmit(e)}>\n          {whichJsEnv() === 'cep' ? (\n            <>\n              <Button variant=\"light\" onClick={this.handleAdobeCepSetFilePath} block>\n                Pick a file\n              </Button>\n              <Form.Text className=\"text-muted\">\n                Select an audio or video file to transcribe. Click on a file in the Adobe Premiere project browser window, and the click{' '}\n                <code>pick a file</code> to select a file to transcribe. Then click <code>save</code> when you are ready to start the transcriptiion.\n              </Form.Text>\n            </>\n          ) : (\n            <Form.Group controlId=\"formTranscriptMediaFile\">\n              <Form.Control required type=\"file\" label=\"Upload\" accept=\"audio/*,video/*,.mxf, audio/x-m4a\" onChange={this.handleFileUpload} />\n              <Form.Text className=\"text-muted\">Select an audio or video file to transcribe</Form.Text>\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">Please chose a audio or video file to transcribe</Form.Control.Feedback>\n            </Form.Group>\n          )}\n\n          <Form.Group controlId=\"formTranscriptTitle\">\n            <Form.Label>Title </Form.Label>\n            <Form.Control required type=\"text\" placeholder=\"Enter a transcript title\" value={this.state.title} onChange={this.handleTitleChange} />\n            <Form.Text className=\"text-muted\">Chose a title for your Transcript</Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">Please chose a title for your transcript</Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"formTranscriptDescription\">\n            <Form.Label>Description </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter a Transcript description\"\n              value={this.state.description}\n              onChange={this.handleDescriptionChange}\n            />\n            <Form.Text className=\"text-muted\">Chose an optional description for your Transcript</Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">Please chose a description for your transcript</Form.Control.Feedback>\n          </Form.Group>\n\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\" disabled={this.state.uploading}>\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default TranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport TranscriptForm from './TranscriptForm';\n\nclass NewTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport NoNeedToConvertNotice from '../lib/NoNeedToConvertNotice/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\n\nimport path from 'path';\n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass BatchTranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      adobeCepFilePath: null,\n      savedNotification: null,\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // This is used in Aobe CEP Panel integration only\n  handleAdobeCepSetFilePath = () => {\n    window.__adobe_cep__.evalScript(`$._PPP.get_current_project_panel_selection_absolute_path()`, response => {\n      console.log('handleAdobeCepSetFilePath');\n      if (response !== '') {\n        console.log('handleAdobeCepSetFilePath', response);\n        //  const newFilePath = response;\n        //  fileName = path.basename(newFilePath);\n        // TODO: add some visual quee that this worked (eg alert box at top? or file name/path somewhere)\n        this.setState({\n          title: path.basename(response),\n          adobeCepFilePath: response,\n        });\n      } else {\n        // TODO: review logic for edge case\n        alert('select a clip');\n      }\n    });\n  };\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    console.log('files', files);\n    const formData = new FormData();\n    files.forEach((file, index) => {\n      formData.append(`file`, file);\n      formData.append(`type`, file.type);\n      if (file.path) {\n        formData.append(`path`, file.path);\n      }\n    });\n    // const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n\n    // formData.append('file', file);\n    // formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    // if (file.path) {\n    //   formData.append('path', file.path);\n    // }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    // if (this.state.title === '') {\n    //   this.setState({ title: file.name });\n    // }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n    const formData = this.state.formData;\n    const listOfFilesPath = formData.getAll('path');\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      listOfFilesPath.forEach(filePath => {\n        data = {\n          title: path.basename(filePath),\n          description: `${path.basename(filePath)}`,\n          path: filePath,\n        };\n\n        // if client run inside of electron\n        // is easier to pass another object with title, description\n        // as well as the additional path to the file\n        // rather then parsing a formData object in node etc..\n        try {\n          ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n            .then(response => {\n              console.log('ApiWrapper.createTranscript-response ', response);\n              // show message or redirect\n              this.setState({\n                uploading: false,\n                uploadCompleted: true,\n                redirect: true,\n                newTranscriptId: response.transcriptId,\n              });\n              this.props.handleSaveForm(response.transcript);\n              // this.props.handleCloseModal();\n            })\n            .catch(e => {\n              console.log('error:::: ', e);\n              this.setState({\n                uploading: false,\n                redirect: false,\n                savedNotification: (\n                  <CustomAlert\n                    dismissable={true}\n                    variant={'danger'}\n                    heading={'Error could not contact the server'}\n                    message={<p>There was an error trying to create this transcript on the server</p>}\n                  />\n                ),\n              });\n            });\n        } catch (e) {\n          console.error('error submitting:::', e);\n        }\n      });\n    }\n    if (whichJsEnv() === 'browser') {\n      const formData = this.state.formData;\n      const listOfFiles = formData.getAll('file');\n      const listOfFileTypes = formData.getAll('type');\n      listOfFiles.forEach((individualFile, index) => {\n        const individualFileFormData = new FormData();\n        individualFileFormData.append('file', individualFile);\n        individualFileFormData.append('type', listOfFileTypes[index]);\n        individualFileFormData.append('title', individualFile.name);\n        individualFileFormData.append('description', '');\n        // individualFileFormData.append('type', file.type);\n        const data = {\n          title: individualFile.name,\n          description: '',\n          // path:\n        };\n\n        try {\n          ApiWrapper.createTranscript(this.state.projectId, individualFileFormData, data)\n            .then(response => {\n              console.log('ApiWrapper.createTranscript-response ', response);\n              // show message or redirect\n              this.setState({\n                uploading: false,\n                uploadCompleted: true,\n                redirect: true,\n                newTranscriptId: response.transcriptId,\n              });\n              this.props.handleSaveForm(response.transcript);\n              // this.props.handleCloseModal();\n            })\n            .catch(e => {\n              console.log('error:::: ', e);\n              this.setState({\n                uploading: false,\n                redirect: false,\n                savedNotification: (\n                  <CustomAlert\n                    dismissable={true}\n                    variant={'danger'}\n                    heading={'Error could not contact the server'}\n                    message={<p>There was an error trying to create this transcript on the server</p>}\n                  />\n                ),\n              });\n            });\n        } catch (e) {\n          console.error('error submitting:::', e);\n        }\n      });\n    }\n    if (whichJsEnv() === 'cep') {\n      alert('not implemented in adobe CEP');\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        {whichJsEnv() === 'electron' && <NoNeedToConvertNotice />}\n\n        <Form noValidate validated={this.state.validated} onSubmit={e => this.handleSubmit(e)}>\n          <Form.Group controlId=\"formTranscriptMediaFile\">\n            <Form.Label>Select Files </Form.Label>\n            <Form.Control required type=\"file\" label=\"Upload\" accept=\"audio/*,video/*,.mxf\" multiple=\"multiple\" onChange={this.handleFileUpload} />\n            <Form.Text className=\"text-muted\">Select multiple audio or video file to transcribe.</Form.Text>\n            <Form.Text className=\"text-muted\">\n              This allows you to batch transcribe multiple files, the transcript name will default to the clip name.\n            </Form.Text>\n            <Form.Text className=\"text-muted\">You can change the default transcript name after you've clicked save.</Form.Text>\n            <Form.Text className=\"text-muted\">\n              Use command <code>⌘</code> + click or shift <code>⇧</code> + click to select multiple files.\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">Please chose a audio or video file to transcribe</Form.Control.Feedback>\n          </Form.Group>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default BatchTranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport BatchTranscriptForm from './BatchTranscriptForm';\n\nclass NewBatchTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <BatchTranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewBatchTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ListPageTranscript from '../lib/ListPageTranscript';\nimport NewTranscriptFormModal from './NewTranscriptFormModal';\nimport NewBatchTranscriptFormModal from './NewBatchTranscriptFormModal';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper';\n\nconst intervalInMs = 30000;\n\nclass Transcripts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      isNewBatchModalShow: false,\n      title: '',\n      description: '',\n      itemId: null,\n      projectTitle: '',\n      isServerError: false,\n      isEditItemModalShow: false,\n    };\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  async componentDidMount() {\n    this.getTranscripts();\n    // For simplicity rather then handling all the edge cases (on start, save, delete,etc..), the interval runs periodicalicly,\n    // and only if there are items in progress in the list, it checks the backed for updates\n    this.interval = setInterval(() => {\n      console.log('Running interval to check for transcripts');\n      if (this.areThereTranscriptsInProgress(this.state.items)) {\n        console.log('interval: checking transcirpt update');\n        this.getTranscripts();\n      }\n    }, intervalInMs);\n  }\n\n  componentWillUnmount = () => {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  };\n\n  getTranscripts = async () => {\n    const result = await ApiWrapper.getTranscripts(this.state.projectId);\n    // TODO: add error handling\n    if (result) {\n      const tmpList = result.transcripts.map(item => {\n        item.display = true;\n\n        return item;\n      });\n      this.setState({\n        projectTitle: result.projectTitle,\n        items: tmpList,\n      });\n    }\n  };\n\n  areThereTranscriptsInProgress = items => {\n    if (items.length !== 0) {\n      const result = items.find(transcript => {\n        return transcript.status === 'in-progress';\n      });\n\n      return result ? true : false;\n    }\n\n    return false;\n  };\n\n  // side POST using wrapperAPI done\n  // inside --> newTranscriptFormModal --> TranscriptForm\n  // component - could be refactored\n  // but needs to take into account file upload from form in TranscriptForm\n  handleSaveItem = item => {\n    console.log('handleSaveItem', item);\n    const newItem = item;\n    newItem.display = true;\n    const { items } = this.state;\n    const newitems = [...items];\n    newitems.push(newItem);\n    this.setState(\n      {\n        items: newitems,\n        title: '',\n        itemId: null,\n        description: '',\n        isNewItemModalShow: false,\n      },\n      () => {\n        console.log('setState');\n      }\n    );\n  };\n\n  // TODO: adjust for multiuple\n  handleSaveBatch = itemsProps => {\n    console.log('handleSaveBatch', itemsProps);\n\n    this.setState({\n      isNewBatchModalShow: false,\n    });\n\n    if (itemsProps.length) {\n      const newItems = itemsProps.map(item => {\n        item.display = true;\n        return item;\n      });\n      const { items } = this.state;\n      const itemsList = [...items];\n      const newItemsList = [...itemsList, ...newItems];\n      this.setState(\n        {\n          items: newItemsList,\n          title: '',\n          itemId: null,\n          description: '',\n          isNewBatchModalShow: false,\n        },\n        () => {\n          console.log('setState - itemsProps.length', this.state.isNewBatchModalShow);\n        }\n      );\n    } else {\n      const newItem = itemsProps;\n      newItem.display = true;\n      const { items } = this.state;\n      const newitems = [...items];\n      newitems.push(newItem);\n      this.setState(\n        {\n          items: newitems,\n          title: '',\n          itemId: null,\n          description: '',\n          isNewItemModalShow: false,\n        },\n        () => {\n          console.log('setState - single', this.state.isNewBatchModalShow);\n        }\n      );\n    }\n  };\n\n  handleSaveEditedItem = transcript => {\n    const newEditedItem = transcript;\n    console.log('newEditedITem', newEditedItem);\n    // display attribute for search\n    newEditedItem.display = true;\n    // Update existing\n    const { items } = this.state;\n    const itemIdex = items.findIndex(item => item.id === transcript.id);\n    const newItemsList = [...items];\n    // preserve status info\n    transcript.status = newItemsList[itemIdex].status;\n    newItemsList[itemIdex] = transcript;\n    const queryParamsOptions = false;\n    const transcriptId = newEditedItem.id;\n    // TODO: add error handling, eg message, wasn't able to update etc..\n    ApiWrapper.updateTranscript(this.state.projectId, transcriptId, queryParamsOptions, newEditedItem).then(response => {\n      if (response.ok) {\n        console.log('ApiWrapper.updateTranscript', response, newItemsList);\n        this.setState({\n          items: newItemsList,\n          isEditItemModalShow: false,\n        });\n      }\n    });\n  };\n\n  findItemById = (list, id) => {\n    const result = list.filter(p => {\n      return p.id === id;\n    });\n\n    return result[0];\n  };\n\n  // opens the modal for editing item\n  handleEditItem = itemId => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isEditItemModalShow: true,\n    });\n  };\n\n  async handleDelete(transcriptId) {\n    console.log('handle delete');\n    // TODO: API + server side request for delete\n    // on successful then update state\n    const result = await ApiWrapper.deleteTranscript(this.state.projectId, transcriptId);\n    // TODO: some error handling, error message saying something went wrong\n    const findId = item => item.id !== transcriptId;\n    if (result.ok) {\n      const tmpNewList = this.state.items.filter(item => findId(item));\n      this.setState(\n        {\n          items: tmpNewList,\n        },\n        () => {\n          console.log('deleted');\n        }\n      );\n    }\n  }\n\n  showLinkPath = id => {\n    return `/projects/${this.state.projectId}/transcripts/${id}/correct`;\n  };\n\n  handleUpdateList = list => {\n    this.setState({ items: list });\n  };\n\n  handleShowCreateNewItemForm = () => {\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleShowCreateNewBatchForm = () => {\n    console.log('handleShowCreateNewBatchForm');\n    this.setState({ isNewBatchModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title: '',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false,\n    });\n  };\n\n  handleCloseBatchModal = () => {\n    this.setState({\n      title: '',\n      itemId: null,\n      description: '',\n      isNewBatchModalShow: false,\n    });\n  };\n\n  handleCloseModalEdit = () => {\n    this.setState({\n      title: '',\n      itemId: null,\n      description: '',\n      isEditItemModalShow: false,\n    });\n  };\n\n  handleUpdateList = list => {\n    this.setState({ items: list, isNewItemModalShow: false });\n  };\n\n  render() {\n    return (\n      <>\n        <Container style={{ marginBottom: '5em', marginTop: '1em' }}>\n          <ListPageTranscript\n            model={'Transcript'}\n            items={this.state.items}\n            handleShowCreateNewItemForm={this.handleShowCreateNewItemForm}\n            handleShowCreateNewBatchForm={this.handleShowCreateNewBatchForm}\n            handleEdit={this.handleEditItem}\n            handleDelete={this.handleDelete}\n            showLinkPath={this.showLinkPath}\n            handleUpdateList={this.handleUpdateList}\n            //\n            handleCloseModal={this.handleCloseModal}\n            handleCloseBatchModal={this.handleCloseBatchModal}\n            icon={<FontAwesomeIcon icon={faFileAlt} color=\"#007bff\" />}\n          />\n          <NewTranscriptFormModal\n            projectId={this.state.projectId}\n            title={this.state.title}\n            description={this.state.description}\n            id={this.state.itemId}\n            modalTitle={'New Transcript'}\n            show={this.state.isNewItemModalShow}\n            handleCloseModal={this.handleCloseModal}\n            handleSaveForm={this.handleSaveItem}\n          />\n\n          <NewBatchTranscriptFormModal\n            projectId={this.state.projectId}\n            title={this.state.title}\n            description={this.state.description}\n            id={this.state.itemId}\n            modalTitle={'New Batch Transcripts'}\n            show={this.state.isNewBatchModalShow}\n            handleCloseModal={this.handleCloseBatchModal}\n            handleSaveForm={this.handleSaveBatch}\n          />\n\n          <ItemFormModal\n            title={this.state.title}\n            description={this.state.description}\n            id={this.state.itemId}\n            modalTitle={'Edit Transcript'}\n            show={this.state.isEditItemModalShow}\n            handleCloseModal={this.handleCloseModalEdit}\n            handleSaveForm={this.handleSaveEditedItem}\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { faColumns } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass PaperEdits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null,\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n\n  async componentDidMount() {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getAllPaperEdits(this.state.projectId);\n    if (result) {\n      // add a display property for component cards search\n      const tmpList = result.map(paperEdit => {\n        paperEdit.display = true;\n\n        return paperEdit;\n      });\n      this.setState({ items: tmpList });\n    }\n    // TODO: some error handling\n  }\n\n  // TODO: handle save / update through API wrapper\n  // // The form works both for new/create and edit/update\n  handleSaveItem = item => {\n    if (!item.id) {\n      ApiWrapper.createPaperEdit(this.state.projectId, item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const items = [...this.state.items];\n          // need to add display true attribute for search to the new project\n          const newPaperEdit = response.paperedit;\n          newPaperEdit.display = true;\n          items.push(response.paperedit);\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: '',\n          });\n        }\n      });\n    } else {\n      ApiWrapper.updatePaperEdit(this.state.projectId, item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const paperedit = response.paperedit;\n          // need to add display true attribute for search to the new project\n          paperedit.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          const newItemsList = [...items];\n          this.findItemById(items, item);\n          const papereditIndex = items.findIndex(item => item.id === paperedit.id);\n          newItemsList[papereditIndex] = paperedit;\n          this.setState({\n            isNewItemModalShow: false,\n            items: newItemsList,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: '',\n          });\n        }\n      });\n    }\n  };\n\n  findItemById = (list, id) => {\n    const result = list.filter(p => {\n      return p.id === id;\n    });\n\n    return result[0];\n  };\n\n  handleEditItem = itemId => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true,\n    });\n  };\n\n  // TODO:\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deletePaperEdit(this.state.projectId, itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter(p => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPath = id => {\n    return `/projects/${this.state.projectId}/paperedits/${id}`;\n  };\n\n  handleUpdateList = list => {\n    this.setState({ items: list });\n  };\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title: '',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Container style={{ marginBottom: '5em', marginTop: '1em' }}>\n          <ListPage\n            model={'Paper Edit'}\n            items={this.state.items}\n            icon={<FontAwesomeIcon icon={faColumns} color=\"#007bff\" />}\n            handleShowCreateNewItemForm={this.handleShowCreateNewItemForm}\n            // deleteItem={ this.createNew }\n            // editItem={ this.createNew }\n            handleEdit={this.handleEditItem}\n            handleDelete={this.handleDeleteItem}\n            showLinkPath={this.showLinkPath}\n            handleUpdateList={this.handleUpdateList}\n          />\n          <ItemFormModal\n            title={this.state.title}\n            description={this.state.description}\n            id={this.state.itemId}\n            modalTitle={this.state.itemId ? 'Edit Paper Edit' : 'New Paper Edit'}\n            show={this.state.isNewItemModalShow}\n            handleCloseModal={this.handleCloseModal}\n            handleSaveForm={this.handleSaveItem}\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default PaperEdits;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport Transcripts from '../Transcripts';\nimport PaperEdits from '../PaperEdits';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass Project extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      // for use in react-bootstrap tab component\n      key: 'transcripts',\n      projectId: this.props.match.params.projectId,\n      projectName: '',\n    };\n  }\n\n  async componentDidMount() {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getProject(this.state.projectId);\n    if (result) {\n      this.setState({ projectName: result.project.title });\n    }\n    // TODO: some error handling\n  }\n\n  render() {\n    return (\n      <>\n        <Container style={{ marginBottom: '5em', marginTop: '1em' }}>\n          <Row>\n            <Col sm={12} md={12} ld={12} xl={12}>\n              <CustomBreadcrumb\n                items={[\n                  {\n                    name: 'Projects',\n                    link: '/projects',\n                  },\n                  {\n                    name: this.state.projectName,\n                  },\n                ]}\n              />\n            </Col>\n          </Row>\n          <Tabs id=\"controlled-tab-example\" activeKey={this.state.key} onSelect={key => this.setState({ key })}>\n            <Tab eventKey=\"transcripts\" title=\"Transcripts\">\n              <Transcripts projectId={this.state.projectId} />\n            </Tab>\n            <Tab eventKey=\"paperedits\" title=\"Paper Edits\">\n              <PaperEdits projectId={this.state.projectId} />\n            </Tab>\n          </Tabs>\n        </Container>\n        {/* <CustomFooter/> */}\n      </>\n    );\n  }\n}\n\nexport default Project;\n"],"sourceRoot":""}