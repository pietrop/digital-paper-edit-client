{"version":3,"sources":["Components/PaperEdits/PaperEdit/ProgramScript/VoiceOver.js","Components/PaperEdits/PaperEdit/ProgramScript/PaperCut.js","Components/PaperEdits/PaperEdit/ProgramScript/TitleHeading.js","Components/PaperEdits/PaperEdit/ProgramScript/Note.js","Components/PaperEdits/PaperEdit/ProgramScript/ProgrammeScript.js"],"names":["VoiceOver","props","state","className","icon","faMicrophoneAlt","this","text","Component","PaperCut","words","map","w","index","key","start","title","end","data-start","data-end","Row","Col","sm","speaker","toUpperCase","style","userSelect","TitleHeading","Note","faStickyNote","InsertPoint","width","backgroundColor","color","faArrowAltCircleRight","DragHandle","sortableHandle","cursor","faGripLines","sharedStyle","border","marginTop","height","SortableItem","sortableElement","indexNumber","value","type","handleDelete","handleEdit","handleAddTranscriptElementToProgrammeScript","handleAddTranscriptSelectionToProgrammeScriptTmpSave","handleChangeInsertPointPosition","useState","isContextMenuVisible","setContextMenuVisibility","customStyle","setStyle","handleContextMenu","event","preventDefault","xs","md","ld","xl","faPen","onClick","faTrash","faArrowAltCircleLeft","ButtonGroup","size","block","Button","variant","faTimes","handleAddTranscriptSelectionToProgrammeScript","faPaste","faHeading","onMouseOver","onMouseLeave","SortableContainer","sortableContainer","children","listStyle","padding","ProgrammeScript","onSortEnd","oldIndex","newIndex","result","arrayMove","programmeScriptElements","handleProgrammeScriptOrderChange","programme","sortableProgramme","el","id","console","error","useDragHandle","handleDeleteProgrammeScriptElement","handleEditProgrammeScriptElement"],"mappings":"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","file":"static/js/19.f525296e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophoneAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass VoiceOver extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <p className={ 'text-muted' }>\n          <FontAwesomeIcon icon={ faMicrophoneAlt } /> { this.props.text }\n        </p>\n      </>\n    );\n  }\n}\n\nexport default VoiceOver;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nclass PaperCut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    let words;\n    if (this.props.words) {\n      // TODO could wrap words in span and add timecodes\n      // to make it cliccable on programme script\n      words = this.props.words.map((w, index) => {return (\n        // eslint-disable-next-line react/jsx-key\n        <span\n          // TODO: add w.id to words to us as index?\n          key={ w.start + index }\n          className=\"words\"\n          title={ `stat: ${ w.start }- end: ${ w.end }` }\n          data-start={ w.start }\n          data-end={ w.end }\n        >{w.text} </span>);});\n    }\n\n    return (\n      <>\n        <Row>\n          <Col sm={ 3 } className={ 'text-truncate text-muted' }\n          // TODO: could add timecode from eg -  ${ shortTimecode(this.props.words[0].start) }\n          // TODO: Could add transcript name along side the timecode for the paper-cut\n            title={ `${ this.props.speaker.toUpperCase() }` }\n            style={ { userSelect: 'none' } }>\n            <strong>{this.props.speaker.toUpperCase()}</strong>\n            {/* <br/> */}\n            {/* <u style={ { cursor: 'pointer' } }>00:01:20</u> */}\n            {/* <br/> */}\n            {/* <FontAwesomeIcon icon={ faTag } />TagExample */}\n          </Col>\n          <Col sm={ 9 }>\n            {/* <p>{ JSON.stringify(this.props.words) }</p> */}\n            { words }\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default PaperCut;\n","import React, { Component } from 'react';\n\nclass TitleHeading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <h4>{this.props.title}</h4>\n    );\n  }\n}\n\nexport default TitleHeading;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStickyNote } from '@fortawesome/free-solid-svg-icons';\n\nclass Note extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <p className={ 'text-secondary' }>\n        <FontAwesomeIcon icon={ faStickyNote } /> { this.props.text }\n      </p>\n    );\n  }\n}\n\nexport default Note;\n","import React, { Component,useState } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Button from 'react-bootstrap/Button'\nimport {\n  sortableContainer,\n  sortableElement,\n  sortableHandle\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport VoiceOver from './VoiceOver';\nimport PaperCut from './PaperCut';\nimport TitleHeading from './TitleHeading';\nimport Note from './Note';\nimport {\n  faGripLines,\n  faPen,\n  faTrash,\n  faArrowAltCircleLeft,\n  faArrowAltCircleRight,\n  faTimes,\n  faHeading,\n  faMicrophoneAlt,\n  faStickyNote,\n  faPaste\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst InsertPoint = (({ text }) => <span style={ { width: '100%', backgroundColor: 'orange', color: '#f9f9f9' } }> <FontAwesomeIcon icon={ faArrowAltCircleRight } /> {text} </span>);\n\nconst DragHandle = sortableHandle(() => <span style={{ cursor: 'move'}}> <FontAwesomeIcon icon={ faGripLines } /> </span>);\n\nconst sharedStyle = {\n  border:'none',\n  width: '100%',\n  marginTop: '0.75em',\n  height: '0.1em',\n  backgroundColor: 'lightgrey',\n}\n\nconst SortableItem = sortableElement(({ \n  indexNumber, \n  value, \n  type, \n  handleDelete, \n  handleEdit, \n  handleAddTranscriptElementToProgrammeScript,\n  handleAddTranscriptSelectionToProgrammeScriptTmpSave,\n  handleChangeInsertPointPosition \n} ) => {\n\n  const [isContextMenuVisible, setContextMenuVisibility] = useState(false);\n\n  const [customStyle, setStyle] = useState({ \n      ...sharedStyle,\n      // backgroundColor: '#f9f9f9',\n      backgroundColor: 'transparent'\n    });\n\n  const handleContextMenu = (event) =>{\n    event.preventDefault();\n    setContextMenuVisibility(true)\n  }\n\n  const handleAddTranscriptSelectionToProgrammeScript =(indexNumber)=>{\n    handleAddTranscriptSelectionToProgrammeScriptTmpSave(indexNumber);\n  }\n\n  return (<li style={{\n    //  borderStyle: 'dashed',\n    // borderWidth: '0.01em',\n    // borderColor: 'lightgray',\n    // padding: '1.5em'\n  }\n    }>\n    <Row>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        <DragHandle />\n      </Col>\n      <Col xs={ 8 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {value}\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: if paper-cut  then don't show edit/pen icon */}\n        {type !== 'paper-cut' && type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' } style={{ cursor: 'pointer'}} icon={ faPen } onClick={ () => { handleEdit(indexNumber); } } /> : null}\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: pass a prop to remove element from list */}\n        {type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' }   style={{ cursor: 'pointer'}} icon={ faTrash } onClick={ () => {handleDelete(indexNumber);} } /> : null}\n        {type === 'insert-point' ? <FontAwesomeIcon style={ { color: 'white' } } icon={ faArrowAltCircleLeft } /> : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n      <Row>\n    {isContextMenuVisible? \n      <ButtonGroup size=\"sm\" block style={{ cursor: 'pointer', width:'100%', \n      // border:'solid 0.06em lightgrey', \n      // paddingBottom: '0.01em'\n      }}>\n        <Button variant=\"light\" \n          onClick={()=>{setContextMenuVisibility(false);}} \n        ><FontAwesomeIcon icon={faTimes}/></Button>\n         <Button variant=\"light\" \n          onClick={()=>{handleAddTranscriptSelectionToProgrammeScript(indexNumber); setContextMenuVisibility(false)}}\n        ><FontAwesomeIcon icon={ faPaste } /> Paste Selection</Button>\n        <Button variant=\"light\" \n          onClick={()=>{handleAddTranscriptElementToProgrammeScript('title',indexNumber); setContextMenuVisibility(false)}}\n        ><FontAwesomeIcon icon={ faHeading } /> Heading</Button>\n        <Button variant=\"light\"\n          onClick={()=>{handleAddTranscriptElementToProgrammeScript('voice-over',indexNumber); setContextMenuVisibility(false)}} \n        ><FontAwesomeIcon icon={ faMicrophoneAlt } />  Voice over</Button>\n        <Button variant=\"light\"\n          onClick={()=>{handleAddTranscriptElementToProgrammeScript('note',indexNumber);  setContextMenuVisibility(false)}}  \n        ><FontAwesomeIcon icon={ faStickyNote } /> Note</Button>\n           <Button variant=\"light\"\n          onClick={()=>{handleChangeInsertPointPosition(indexNumber);  setContextMenuVisibility(false)}}  \n          title={'move insert point'}\n        >Move insert Point<FontAwesomeIcon icon={ faArrowAltCircleRight } /><FontAwesomeIcon icon={ faArrowAltCircleLeft } /></Button>\n      </ButtonGroup> \n    : null }\n    </Row>\n      </Col>\n    </Row>\n    <Row>\n   \n    <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } \n        style={{ cursor: 'context-menu'}}\n        onMouseOver={()=>{\n          setStyle({ \n          ...sharedStyle,\n          backgroundColor: 'lightgrey'\n        });\n      }}\n        onMouseLeave={()=>{\n          setStyle({ \n          ...sharedStyle,\n           backgroundColor: 'transparent',\n            // backgroundColor: '#f9f9f9'\n        });\n      }}\n        onClick={handleContextMenu}\n        >\n         {customStyle.backgroundColor === 'lightgrey'? <span style={{color:'grey'}}>{'+'}</span>:null}\n    </Col>\n    <Col xs={ 11 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 } \n          style={{ cursor: 'context-menu'}}\n          onMouseOver={()=>{\n          setStyle({ \n          ...sharedStyle,\n          backgroundColor: 'lightgrey'\n        })}}\n      onMouseLeave={()=>{\n        setStyle({ \n          ...sharedStyle,\n          backgroundColor: 'transparent'\n          //  backgroundColor: '#f9f9f9'\n        });\n        // setContextMenuVisibility(false);\n      }}\n        onClick={handleContextMenu}\n        >\n      <div  className={'insertDiv'} style={customStyle} \n      ></div>\n    </Col>\n    </Row>\n  </li>);\n});\n\nconst SortableContainer = sortableContainer(({ children }) => {\n\n  return <ul style={ { listStyle: 'none', padding: '0px' } }>{children}</ul>;\n});\n\nclass ProgrammeScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // items: this.props.programmeScript ? this.props.programmeScript.elements : []\n      // items: [ 'Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6' ]\n    };\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const result = arrayMove(this.props.programmeScriptElements, oldIndex, newIndex);\n    this.props.handleProgrammeScriptOrderChange(result);\n  };\n\n  render() {\n    // const { items } = this.state;\n    let programme;\n    let sortableProgramme;\n    if (this.props.programmeScriptElements) {\n      programme = this.props.programmeScriptElements.map((el,index) => {\n        switch (el.type) {\n        case 'title':\n          return { el:<TitleHeading key={ el.id } title={ el.text } />, type: el.type };\n        case 'voice-over':\n          return { el:<VoiceOver key={ el.id } text={ el.text } />, type: el.type };\n        case 'paper-cut':\n          return { el: <PaperCut key={ el.id } el={ el } speaker={ el.speaker } words={ el.words }/>, type: el.type };\n        case 'note':\n          return { el: <Note key={ el.id } text={ el.text } />, type: el.type };\n        case 'insert-point':\n          return { el: <InsertPoint text={ el.text } />, type: el.type };\n        default:\n          console.error('invalid programme element type');\n          return null;\n        }\n      });\n    }\n\n    if (this.props.programmeScriptElements) {\n      sortableProgramme = <SortableContainer useDragHandle onSortEnd={ this.onSortEnd }>\n        {programme.map((value, index) => {\n          return <SortableItem\n            key={ `item-${ index }` }\n            index={index}\n            indexNumber={ index }\n            value={ value.el }\n            type={ value.type }\n            handleDelete={ this.props.handleDeleteProgrammeScriptElement }\n            handleEdit={ this.props.handleEditProgrammeScriptElement }\n            handleAddTranscriptElementToProgrammeScript={this.props.handleAddTranscriptElementToProgrammeScript}\n            handleAddTranscriptSelectionToProgrammeScriptTmpSave={this.props.handleAddTranscriptSelectionToProgrammeScriptTmpSave}\n            handleChangeInsertPointPosition={this.props.handleChangeInsertPointPosition}\n          />\n        })}\n      </SortableContainer>;\n    }\n\n    return (\n      <>\n        {/* {programme} */}\n        { sortableProgramme }\n      </>\n    );\n  }\n}\n\nexport default ProgrammeScript;\n"],"sourceRoot":""}